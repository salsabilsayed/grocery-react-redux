{"version":3,"sources":["components/Input.module.css","components/Container.module.css","components/Title.module.css","components/Button.module.css","redux/Reducer.js","redux/store.js","redux/localstorage.js","components/Container.jsx","components/Title.jsx","components/Input.jsx","redux/Actions.js","components/Button.jsx","components/Item.jsx","components/ItemsList.jsx","components/Alert.jsx","App.js","reportWebVitals.js","index.js","components/Item.module.css"],"names":["module","exports","initialState","isEditing","inputText","updatedItemId","items","groceryReducer","state","action","type","payload","filter","item","id","newState","index","findIndex","e","newObj","name","splice","text","persistedState","localstorageItems","localStorage","getItem","JSON","parse","loadState","store","createStore","subscribe","stateItems","setLocalstarageItems","stringify","setItem","saveState","getState","Container","props","className","classes","container","children","Title","title","Input","dispatch","useDispatch","useSelector","generatedId","Math","random","toFixed","inputValue","inputContainer","onSubmit","preventDefault","showAlert","setInputValue","input","placeholder","value","onChange","target","submitBtn","Button","btn","onClick","Item","icon","faEdit","edit","updateItem","faTrash","delete","removeItem","ItemsList","allItems","length","map","Alert","message","useEffect","timeout","setTimeout","clearTimeout","App","useState","show","alert","setAlert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b241097c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Input_inputContainer__1lvZW\",\"input\":\"Input_input__2bYwb\",\"submitBtn\":\"Input_submitBtn__21Lm2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3OqrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__3Rl9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3KOKE\"};","\r\nconst initialState = {\r\n    isEditing: false,\r\n    inputText: '',\r\n    updatedItemId: null,\r\n    items: []\r\n}\r\n\r\nconst groceryReducer = (state = initialState, action) =>{\r\n    switch (action.type){\r\n        case 'ADD_ITEM': return {\r\n            ...state,\r\n            inputText: '',\r\n            isEditing: false,\r\n            items: [...state.items, action.payload]\r\n            }\r\n\r\n        case 'REMOVE_ITEM': return {\r\n            ...state,\r\n            items: state.items.filter(item => item.id !== action.payload)\r\n            }\r\n\r\n        case 'UPDATE_ITEM': \r\n        \r\n        return {\r\n         ...state,\r\n          isEditing:true, \r\n         updatedItemId:action.payload\r\n        \r\n        }\r\n\r\n        case 'ADD_AFTER-UPDATE': \r\n        const newState = {...state}\r\n        const index = newState.items.findIndex(e => e.id === newState.updatedItemId);\r\n        const newObj = {\r\n            id:newState.updatedItemId,\r\n            name:action.payload\r\n        }\r\n        newState.items.splice(index,1,newObj);\r\n        return {\r\n            ...newState,\r\n            isEditing:false,\r\n            items: newState.items\r\n            }\r\n\r\n\r\n        case 'ADD_TEXT': return {\r\n            ...state,\r\n            isEditing:true,\r\n            inputText: action.payload.text\r\n            }\r\n\r\n\r\n        case 'REMOVE_ALL_ITEMS': return {\r\n            ...state,\r\n            inputText: '',\r\n            items: []\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default groceryReducer;","import { createStore } from \"redux\";\r\nimport groceryReducer from \"./Reducer\";\r\nimport { loadState,saveState } from \"./localstorage\";\r\n\r\nconst persistedState = loadState();\r\n\r\nconst store = createStore(groceryReducer,persistedState);\r\n\r\nstore.subscribe(()=>{\r\n    saveState({\r\n        items: store.getState().items\r\n    })\r\n  })\r\n\r\nexport default store;","export const loadState = ()=>{\r\n    try{\r\n        const localstorageItems = localStorage.getItem('items');\r\n        if(localstorageItems === null){\r\n            return undefined;\r\n        }\r\n        return JSON.parse(localstorageItems);\r\n    }catch(e){\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const saveState = (stateItems) =>{\r\n    const setLocalstarageItems = JSON.stringify(stateItems);\r\n    localStorage.setItem('items',setLocalstarageItems);\r\n}","import React from 'react';\r\n\r\nimport classes from './Container.module.css';\r\n\r\nconst Container = props => {\r\n    return (\r\n        <div className={classes.container}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\r\n\r\nimport classes from './Title.module.css';\r\n\r\nconst Title = () => {\r\n    return (\r\n        <h1 className={classes.title}>\r\n            Grocery Bud\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default Title;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { addItem, addAfterUpdate } from \"../redux/Actions\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\n\r\nconst Input = (props) => {\r\n  const dispatch = useDispatch();\r\n  const isEditing = useSelector((state) => state.isEditing);\r\n\r\n  const generatedId = Math.random().toFixed(4);\r\n  \r\n  const item = {\r\n    name: props.inputValue,\r\n    id: generatedId,\r\n  };\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if(props.inputValue === ''){\r\n      props.showAlert(true, 'danger', 'Please enter value!');\r\n      return ;\r\n    }\r\n    if (isEditing) {\r\n      dispatch(addAfterUpdate(props.inputValue));\r\n      props.showAlert(true, 'success', 'Value Changed');\r\n    } else {\r\n      dispatch(addItem(item));\r\n      props.showAlert(true, 'success', 'Item was addded to the list');\r\n    }\r\n  \r\n    props.setInputValue(\"\");\r\n  };\r\n\r\n  const onChangeHandler = (e) => {\r\n    props.setInputValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.inputContainer} onSubmit={submitHandler}>\r\n      <input\r\n        type=\"text\"\r\n        className={classes.input}\r\n        placeholder=\"e.g. eggs\"\r\n        value={props.inputValue}\r\n        onChange={onChangeHandler}\r\n      />\r\n\r\n      <button type=\"submit\" className={classes.submitBtn}>\r\n        {!isEditing && \"Submit\"}\r\n        {isEditing && \"Edit\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","\r\nexport const addItem = (value) => {\r\n    return {\r\n        type: 'ADD_ITEM',\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const removeItem = (id) => {\r\n    return {\r\n        type: 'REMOVE_ITEM',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const updateItem = (id) => {\r\n    \r\n    return {\r\n        type: 'UPDATE_ITEM',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const addAfterUpdate = (inputText) => {\r\n    return {\r\n        type: 'ADD_AFTER-UPDATE',\r\n        payload: inputText\r\n    }\r\n}\r\n\r\nexport const addTextToInput = (text) => {\r\n    return {\r\n        type: 'ADD_TEXT',\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const removeAllItems = () => {\r\n    return {\r\n        type: 'REMOVE_ALL_ITEMS'\r\n    }\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeAllItems } from '../redux/Actions';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nexport default function Button() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <button className={classes.btn} onClick={()=> dispatch(removeAllItems())}>\r\n            Clear Items\r\n        </button>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport { addTextToInput, removeItem, updateItem } from \"../redux/Actions\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport classes from \"./Item.module.css\";\r\n\r\nconst Item = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { id, name } = props;\r\n\r\n  const updateHandler = () => {\r\n    props.setInputValue(name);\r\n    dispatch(updateItem(id));\r\n    dispatch(addTextToInput(name));\r\n  };\r\n\r\n  const removeHandler = () => {\r\n    dispatch(removeItem(id));\r\n    props.showAlert(true, 'danger', 'Item Removed!')\r\n  };\r\n\r\n  return (\r\n    <div className={classes.item}>\r\n      <p className={classes.text}>{name}</p>\r\n      <div>\r\n        <FontAwesomeIcon\r\n          icon={faEdit}\r\n          className={classes.edit}\r\n          onClick={updateHandler}\r\n        />\r\n\r\n        <FontAwesomeIcon\r\n          icon={faTrash}\r\n          className={classes.delete}\r\n          onClick={removeHandler}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport Item from './Item';\r\nimport { useSelector} from 'react-redux';\r\n\r\nfunction ItemsList(props) {\r\n    const allItems = useSelector(state => state.items);\r\n\r\n    return (\r\n        <div>\r\n            {allItems.length > 0 && allItems.map((item,index)=> <Item \r\n            key={index}\r\n            name={item.name}\r\n            id={item.id}\r\n            setInputValue={props.setInputValue}\r\n            showAlert={props.showAlert}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemsList;\r\n","import React, { useEffect } from 'react';\r\nimport './Alert.css'\r\n\r\nfunction Alert({type,message,showAlert}) {\r\n    \r\n    useEffect(()=>{\r\n            const timeout = setTimeout(()=>{\r\n                showAlert();\r\n            },3000)\r\n\r\n            return ()=> clearTimeout(timeout);\r\n    },[showAlert]);\r\n\r\n    return (\r\n        <div>\r\n            <p className={`alert ${type}`}>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;\r\n","import { useState } from 'react';\nimport { Provider} from 'react-redux';\nimport store from './redux/store';\n\nimport Container from './components/Container';\nimport Title from './components/Title';\nimport Input from './components/Input';\nimport Button from './components/Button';\nimport ItemsList from './components/ItemsList';\nimport Alert from './components/Alert';\n\nimport './App.css';\n\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [alert, setAlert] = useState({show:false,type:'',message:''});\n\n  const showAlert = (show=false,type='',message='') =>{\n    setAlert({show,type,message});\n  }\n  \n  return (\n    <Provider store={store}>\n      <Container>\n        {alert.show && <Alert {...alert} showAlert={showAlert}/>}\n        <Title />\n        <Input inputValue={inputValue} setInputValue={setInputValue} showAlert={showAlert}/>\n        <ItemsList setInputValue={setInputValue} showAlert={showAlert}/>\n        <Button />\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__EPHff\",\"text\":\"Item_text__Kvu1Q\",\"edit\":\"Item_edit__2l1qT\",\"delete\":\"Item_delete__2xj0b\"};"],"sourceRoot":""}